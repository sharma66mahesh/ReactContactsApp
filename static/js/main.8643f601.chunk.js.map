{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","className","name","ArrowDropDown_default","style","cursor","onClick","Delete_default","float","color","bind","react_router_dom","to","Edit_default","marginRight","email","phone","Contacts","deleteContact","console","log","newContacts","Fragment","contacts_Contact","deleteClickHandler","Header","headName","Home_default","Add_default","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8643f601.chunk.js","sourcesContent":["//state mgmt using context api\n\nimport React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\n//detect what type of action is triggered and return modified state\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    \n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        // contacts: [action.payload, ...state.contacts]\n        contacts: state.contacts.map(contact => \n          contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n      \n    default:\n    return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    \n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    }\n  };\n\n  // componentDidMount () {\n  //   axios.get('https://jsonplaceholder.typicode.com/users')\n  //     .then(res => this.setState({contacts: res.data}));\n  // }\n  \n  //above code by using async await\n  async componentDidMount () {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts: res.data});\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","// a single contact, used by contacts \n\nimport React from \"react\";\nimport PropTypes from 'prop-types'; //for prop validation\n// import '../css/contact.css';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Consumer } from '../../context'; \nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Contact extends React.Component {\n  // constructor() {\n  //   super();\n\n  //   this.onShowClick = this.onShowClick.bind(this); //if u don't want to use bind, another method is to use arrow function definition\n  // }\n  state = {\n    showContactInfo: false\n  };\n  // static propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   email: PropTypes.string.isRequired,\n  //   phone: PropTypes.string.isRequired\n  // }\n\n  //this requires binding cuz arrow function is not used\n  // onShowClick() {\n  //   console.log(this.state);\n  // }\n\n  //user defined arrow function don't require binding\n  // onShowClick = e => {\n  //   console.log(e.target);  //e is the event and e.target is the actual element that triggered this method\n  // }\n\n  // onShowClick = (name, e) => {\n  //   // console.log(name, e.target);\n  //   this.setState({showContactInfo: !this.state.showContactInfo});\n  //   console.log(this.state.showContactInfo);\n  // };\n\n  // onDeleteClick = () => {\n  //   this.props.deleteClickHandler();  //call function from Contacts.js (parent)\n  // }\n\n  // onDeleteClick = (id, dispatch) => {\n  //   axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\n  // };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      const res = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload:  id});\n    } catch(e) {\n      //in real apps, you wouldn't dispatch in catch section.\n      dispatch({type: 'DELETE_CONTACT', payload:  id});\n    }\n  };\n\n  render() {\n    const {contact} = this.props;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h3>\n                {contact.name}\n                {/* <ArrowDropDown onClick={this.onShowClick.bind(this)}/>   had to use bind here if it wasn't bound in constructor*/} \n                {/* <ArrowDropDown onClick={this.onShowClick} /> */}\n                {/* <ArrowDropDown onClick = {this.onShowClick.bind(this, contact.name)} /> */}\n                {/* bind should pass first param as \"this\". Second parameter could be anything */}\n                {/* Similarly, onShowClick should have event as last parameter if something is passed to it */}\n\n                {/* Directly carry out task on onClick */}\n                <ArrowDropDown style = {{cursor: 'pointer'}}onClick = {() =>\n                  this.setState({showContactInfo: !this.state.showContactInfo})\n                } />\n\n                {/* Dispatch is user defined function defined inside state in context.js */}\n                <DeleteIcon style = {{cursor: 'pointer', float: 'right', color: 'red'}} \n                onClick = {this.onDeleteClick.bind(this, contact.id, dispatch)}\n                />\n\n                <Link to={`/contact/edit/${contact.id}`}>\n                  <EditIcon style = {{cursor:'pointer', float:'right', marginRight:'10px'}} />\n                </Link>\n\n              </h3>\n              {showContactInfo ? \n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Email: {contact.email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Phone: {contact.phone}\n                  </li>\n                </ul>\n                :\n                null\n              }\n            </div>\n          );\n        }}\n      </Consumer>\n      \n    );\n  }\n}\n\n//This is better way But you can also put this inside the class as well. see static propTypes comment\n// Contact.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   email: PropTypes.string.isRequired,\n//   phone: PropTypes.string.isRequired\n// }\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteClickHandler: PropTypes.func.isRequired\n};\n\nexport default Contact;","//In previous file, we passed contact and other information as props. Now instead, we will be using state to store information about individuals.\n\nimport React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\n\nclass Contacts extends Component {\n  // constructor() {\n  //   super();\n    // this.state=\n    //state of contacts moved to context.js\n\n  \n  deleteContact = (id) => {\n    console.log(id);\n    const { contacts } = this.state;\n\n    const newContacts = contacts.filter(contact => contact.id !== id);\n\n    this.setState({contacts: newContacts});\n  }\n\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const {contacts} = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className='text-danger'>Contact </span>List\n              </h1>\n              {contacts.map(contact => (\n                <Contact \n                  key={contact.id}\n                  contact = {contact}\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n                />\n              ))}\n              {/* </div> */}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n//     const { contacts } = this.state;  //destructuring\n\n//     return(\n//       // <div> \n//       // see by inspect element, u'll find this div is unnecessary. so we'll use fragment. Fragment is just for grouping, it won't show any tags in actual html.\n      \n//     );\n//   }\n// }\n\nexport default Contacts;","import React from \"react\";\nimport PropTypes from 'prop-types'; //for validation of props' data types\nimport { Link } from 'react-router-dom';\nimport Add from '@material-ui/icons/Add';\nimport Home from '@material-ui/icons/Home';\n\n//function based component\nfunction Header(props) {\n  const { headName} = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      {/* <h1 style={{color:\"red\"}}>{props.headName}</h1> */}\n      {/* <h1 style={headingStyle}>{props.headName}</h1> */}\n\n\n      <div className=\"container\">\n        {/* <a href='/' className=\"navbar-brand\">{headName}</a> reloads the page*/}\n        <Link to='/' className=\"navbar-brand\">{headName}</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to = '/' className='nav-link'>\n                <Home />Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to = '/contact/add' className='nav-link'>\n                <Add />Add Contact\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to = '/about' className='nav-link'>\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n//if nothing is passed as props, use default\nHeader.defaultProps = {\n  headName: 'MyApp'\n};\n\n//specify validation for what prop types should be passed. Throws only warning on console if can't validate\nHeader.propTypes = {\n  headName: PropTypes.string.isRequired\n}\n\n// const headingStyle = {\n//   color: 'red',\n//   fontSize: '50px'\n// }\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n//classnames takes 2 params. first is the default classes. the second param's classname is set upon meeting certain condition\n\nconst TextInputGroup = ({\n  label,\n  name, \n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n\n}) => {\n  //The info in div with className 'invalid-feedback' is shown only when there is a class with className 'is-invalid'\n  return(\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        name={name}\n        type={type}\n        className={\n          classnames('form-control form-control-lg', {\n            'is-invalid': error\n          })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n\n      <div className=\"invalid-feedback\">{label} is required</div>\n  </div>\n  );\n\n};\n\n//define what props should be passed to this component\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\n//if type prop is not passed, set it to default value\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}  //populate this, if empty input fields\n  }\n\n  onChange = e =>{\n    // console.log(e.target);\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  onSubmit = async (dispatch,e) => {\n    e.preventDefault();   //don't want to submit to a file (which is by default)\n    // console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    if (name === ''){\n      this.setState({errors: {name: \"Name is required\"}});\n      return;\n    }\n\n    if (email === ''){\n      this.setState({errors: {email: \"Email is required\"}});\n      return;\n    }\n\n    if (phone === ''){\n      this.setState({errors: {phone: \"Phone is required\"}});\n      return;\n    }\n    //if key and value have same names, we can write only once\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    //posting to the uri returns just id. We add the new contact information from form.\n    // axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n    //   .then(res => dispatch({type: 'ADD_CONTACT', payload: res.data}));\n\n    //above code using async await\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    dispatch({type:'ADD_CONTACT', payload: res.data});\n\n    //clear the fields after submit button is pressed\n    this.setState({\n      name:'',\n      email:'',\n      phone:''\n    });\n\n    this.props.history.push('/');\n  }\n\n  render () {\n    const { name, email, phone, errors } = this.state;\n    \n    return (\n      <Consumer>\n        {value =>{\n          const {dispatch} = value;\n          return(\n            <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n    \n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n\n                <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error=  {errors.email}\n                />\n\n                <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n\n              </form>\n            </div>\n          </div>\n\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}  //populate this, if empty input fields\n  }\n\n  async componentDidMount () {\n    //get id from the url\n    const { id } = this.props.match.params;\n\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n\n  }\n\n  onChange = e =>{\n    // console.log(e.target);\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  onSubmit = async (dispatch,e) => {\n    e.preventDefault();   //don't want to submit to a file (which is by default)\n    // console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    if (name === ''){\n      this.setState({errors: {name: \"Name is required\"}});\n      return;\n    }\n\n    if (email === ''){\n      this.setState({errors: {email: \"Email is required\"}});\n      return;\n    }\n\n    if (phone === ''){\n      this.setState({errors: {phone: \"Phone is required\"}});\n      return;\n    }\n    \n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    //get the id from url\n    const {id} = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n    \n    dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n    this.props.history.push('/');\n  }\n\n  render () {\n    const { name, email, phone, errors } = this.state;\n    \n    return (\n      <Consumer>\n        {value =>{\n          const {dispatch} = value;\n          return(\n            <div className=\"card mb-3\">\n            <div className=\"card-header\">Update Contact</div>\n    \n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n\n                <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error=  {errors.email}\n                />\n\n                <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n\n                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n\n              </form>\n            </div>\n          </div>\n\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}","import React from 'react';\n\n//props are passed as args if any\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className='text-danger'>404 NOT FOUND!</span></h1>\n      <p className='lead'>Sorry. The page doesn't exist.</p>\n    </div>\n  );\n}","import React, {Component} from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({title: data.title, body: data.body});\n      })\n  }\n\n  render() {\n    const {title, body} = this.state;\n    return (\n      <div>\n        <div>Title: {title}</div>\n        <div>Body: {body}</div>\n      </div>\n    );\n  }\n}\n\nexport default Test;","import React from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from './context';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header headName=\"ContactManager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n              <Route exact path='/test' component= {Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}